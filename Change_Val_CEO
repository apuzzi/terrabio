/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var table = ee.FeatureCollection("users/an-sig/TerraBio/CEO_Change_Val_csv"),
    disturbances = ee.Image("users/an-sig/TerraBio/Degrad_combined_v2"),
    regrowth = ee.Image("users/an-sig/TerraBio/Regrowth_v1");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/*
In CEO csv table:
'pl_remapped' is original strata
1- degradation
2- stable non-forest
3- forest
4- deforestation
5- regrowth
6- different events (degradation or deforestation + regrowth in any order)

combination of properties will give the reference class


In disturbance map:
'remapped' is map class
1- degradation
2- deforestation
3- stable forest
4- Stable non-forest



In regrowth map:
'remapped is map class'
0- non-regrowth
1- regrowth
*/

// Working the CEO table

print('CEO csv',table);

var ref_forest = table.filter(ee.Filter.and(ee.Filter.eq('Land Cover in 2015?','Forest'),
                                            ee.Filter.eq('Change between 2010-2015?',false))).map(function(pt){
                                              return pt.set('original_stratum',3);
                                            });
print('Forest ref points',ref_forest);

var ref_non_forest = table.filter(ee.Filter.and(ee.Filter.eq('Land Cover in 2015?','Non-forest'),
                                            ee.Filter.eq('Change between 2010-2015?',false))).map(function(pt){
                                              return pt.set('original_stratum',2);
                                            });
print('Non-forest ref points',ref_non_forest);

var ref_degrad = table.filter(ee.Filter.and(ee.Filter.eq('Change between 2010-2015?',true),
                                             ee.Filter.eq('Type of change?','Decrease in canopy'),
                                             ee.Filter.eq('Type of disturbance?','Degradation'),
                                             ee.Filter.eq('Is there a second change?',false))).map(function(pt){
                                              return pt.set('original_stratum',1);
                                            });
print('Degradation ref points',ref_degrad);

var ref_deforest = table.filter(ee.Filter.and(ee.Filter.eq('Change between 2010-2015?',true),
                                             ee.Filter.eq('Type of change?','Decrease in canopy'),
                                             ee.Filter.eq('Type of disturbance?','Deforestation'),
                                             ee.Filter.eq('Is there a second change?',false))).map(function(pt){
                                              return pt.set('original_stratum',4);
                                            });
print('Deforestation ref points',ref_deforest);

var ref_regrowth = table.filter(ee.Filter.and(ee.Filter.eq('Change between 2010-2015?',true),
                                             ee.Filter.eq('Type of change?','Increase in canopy'),
                                             ee.Filter.eq('Is there a second change?',false))).map(function(pt){
                                              return pt.set('original_stratum',5);
                                            });
print('Regrowth ref points',ref_regrowth);

var ref_multiEvents = table.filter(ee.Filter.and(ee.Filter.eq('Change between 2010-2015?',true),
                                             ee.Filter.eq('Is there a second change?',true))).map(function(pt){
                                              return pt.set('original_stratum',6);
                                            });
print('Multiple events ref points',ref_multiEvents);

var newTable = ref_forest.merge(ref_non_forest).merge(ref_degrad).merge(ref_deforest).merge(ref_regrowth).merge(ref_multiEvents)
print('newTable',newTable)






// Disturbances raster
var disturbances = disturbances.unmask(4);
Map.addLayer(disturbances,{min: 1, max: 4, palette:['eafe00','ff1115','07410a','68635b']},'Disturbance',false);
Map.addLayer(regrowth,{min:0,max:1},'Regrowth',false);

var dist_extract = disturbances.sampleRegions({
  collection:table,
  properties:['plotid','sampleid','lon','lat','pl_remapped',
              'Land Cover in 2015?','Change between 2010-2015?',
              'Type of change?','Type of disturbance?','Year of change?',
              'Driver?','Is there a second change?','Type of change?',
              'Type of disturbance?','Year of 2nd change?','2nd Driver?'],
  geometries:true
});

print('Disturbances table',dist_extract);
Map.addLayer(dist_extract);

